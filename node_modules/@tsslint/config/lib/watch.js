"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.watchConfigFile = void 0;
const esbuild = require("esbuild");
const path = require("path");
async function watchConfigFile(configFilePath, onBuild, watch = true, createHash = btoa) {
    const outDir = path.resolve(__dirname, '..', '..', '.tsslint');
    const outFileName = createHash(path.relative(outDir, configFilePath)) + '.cjs';
    const outFile = path.join(outDir, outFileName);
    const resultHandler = (result) => {
        let config;
        if (!result.errors.length) {
            try {
                config = require(outFile).default;
                delete require.cache[outFile];
            }
            catch (e) {
                result.errors.push({ text: String(e) });
            }
        }
        onBuild(config, result);
    };
    const ctx = await esbuild.context({
        entryPoints: [configFilePath],
        bundle: true,
        sourcemap: true,
        outfile: outFile,
        format: 'cjs',
        platform: 'node',
        plugins: [{
                name: 'tsslint',
                setup(build) {
                    build.onResolve({ filter: /.*/ }, args => {
                        if (!args.path.endsWith('.ts')) {
                            try {
                                const jsPath = require.resolve(args.path, { paths: [args.resolveDir] });
                                return {
                                    path: jsPath,
                                    external: true,
                                };
                            }
                            catch { }
                        }
                        return {};
                    });
                    if (watch) {
                        build.onEnd(resultHandler);
                    }
                },
            }],
    });
    if (watch) {
        await ctx.watch();
    }
    else {
        const result = await ctx.rebuild();
        await ctx.dispose();
        resultHandler(result);
    }
    return ctx;
}
exports.watchConfigFile = watchConfigFile;
//# sourceMappingURL=watch.js.map